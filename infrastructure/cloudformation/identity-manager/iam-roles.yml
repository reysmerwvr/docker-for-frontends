AWSTemplateFormatVersion: '2010-09-09'
Resources:
  # Elastic Beanstalk Service Role
  ElasticBeanstalkServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub '${AWS::StackName}-ElasticBeanstalkServiceRole'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "elasticbeanstalk.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "ElasticBeanstalkManagedPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "elasticloadbalancing:*"
                  - "ec2:*"
                  - "autoscaling:*"
                  - "cloudwatch:*"
                  - "s3:*"
                  - "logs:*"
                  - "cloudformation:DescribeStackResources"
                  - "cloudformation:DescribeStacks"
                Resource: "*"

  # EC2 Instance Role
  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${AWS::StackName}-ElasticBeanstalk-EC2InstanceRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore  # Allows EC2 to use Systems Manager
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier  # Allows EC2 to use Elastic Beanstalk Web Tier
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier  # Allows EC2 to use Elastic Beanstalk Worker Tier
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker  # Allows EC2 to use Elastic Beanstalk Multicontainer Docker
      Path: "/"

  # EC2 Instance Profile
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub '${AWS::StackName}-ElasticBeanstalk-EC2InstanceProfile'
      Path: "/"
      Roles:
        - !Ref EC2InstanceRole

  # CodeBuild Service Role
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${AWS::StackName}-CodeBuildServiceRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - !ImportValue HostingBucketName
                  - !Sub 'arn:aws:s3:::${HostingBucketName}/*'
              - Effect: Allow
                Action:
                  - cloudfront:CreateInvalidation
                Resource: !ImportValue CloudFrontDistributionId

  # CodePipeline Service Role
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${AWS::StackName}-CodePipelineServiceRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                Resource: !ImportValue ArtifactBucketName
              - Effect: Allow
                Action:
                  - codebuild:*
                Resource: !ImportValue CodeBuildProjectArn

Outputs:
  ElasticBeanstalkServiceRoleArn:
    Description: ARN of the Elastic Beanstalk Service Role
    Value: !GetAtt ElasticBeanstalkServiceRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-ElasticBeanstalkServiceRoleArn'

  EC2InstanceProfileArn:
    Description: ARN of the EC2 Instance Profile
    Value: !GetAtt EC2InstanceProfile.Arn
    Export:
      Name: !Sub '${AWS::StackName}-EC2InstanceProfileArn'

  EC2InstanceRoleArn:
    Description: ARN of the EC2 Instance Role
    Value: !GetAtt EC2InstanceRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-EC2InstanceRoleArn'

  CodeBuildServiceRoleArn:
    Description: ARN of the CodeBuild Service Role
    Value: !GetAtt CodeBuildServiceRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-CodeBuildServiceRoleArn'

  CodePipelineServiceRoleArn:
    Description: ARN of the CodePipeline Service Role
    Value: !GetAtt CodePipelineServiceRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-CodePipelineServiceRoleArn'
